---
- name: 'authorized_keys | Lookup SSH keys'
  ansible.builtin.set_fact:
    __t_authorized_keys: >-
      {{
        __t_authorized_keys | default([]) + [
          {
            'user': __t_item.0.name,
            'key': lookup(
              'ansible.builtin.file',
              lookup('ansible.builtin.first_found', __t_params)
            )
          }
        ]
      }}
  vars:
    __t_params:
      files:
        - '{{ __t_item.1.key }}'
      paths:
        - '{{ playbook_dir }}/files'
        - '{{ inventory_dir }}/files'
        - '{{ role_path }}/files'
      skip: true
  no_log: '{{ _owb_authorized_keys_no_log }}'
  # select only items that have is_file: true specified
  loop: >-
    {{
      _owb_users |
      rejectattr('authorized_keys', 'undefined') |
      ansible.builtin.subelements('authorized_keys') |
      selectattr('1.is_file', 'defined') |
      selectattr('1.is_file', '==', true)
    }}
  loop_control:
    loop_var: '__t_item'
    label: >-
      {{
        __t_item.0.name ~
        ' -> ' ~
        __t_item.1.name | default('')
      }}

- name: 'authorized_keys | Append in-line SSH keys'
  ansible.builtin.set_fact:
    __t_authorized_keys: >-
      {{
        __t_authorized_keys | default([]) + [
          {
            'user': __t_item.0.name,
            'key': __t_item.1.key
          }
        ]
      }}
  no_log: '{{ _owb_authorized_keys_no_log }}'
  loop: >-
    {{
      _owb_users |
      rejectattr('authorized_keys', 'undefined') |
      ansible.builtin.subelements('authorized_keys') |
      selectattr('1.is_file', 'undefined')
      +
      _owb_users |
      rejectattr('authorized_keys', 'undefined') |
      ansible.builtin.subelements('authorized_keys') |
      selectattr('1.is_file', 'defined') |
      selectattr('1.is_file', '==', false)
    }}
  loop_control:
    loop_var: '__t_item'
    label: >-
      {{
        __t_item.0.name ~
        ' -> ' ~
        __t_item.1.name | default('')
      }}

- name: 'authorized_keys | Ensure authorized keys are present'
  ansible.posix.authorized_key:
    user: '{{ __t_user }}'
    state: 'present'
    # unfortunately, the module uses \n to determine a set of keys, which means
    # that multi-line YAML wont work here, as it will mess with the \n formatting
    # and it would end up with a long string with \n after each key :/
    key: "{{ __t_authorized_keys | selectattr('user', '==', __t_user) | map(attribute='key') | join('\n') }}"
    exclusive: >-
      {{
        (
          _owb_users |
          selectattr('name', '==', __t_user) |
          selectattr('remove_unspecified_ssh_keys', 'defined') |
          length > 0
        ) | ansible.builtin.ternary(
          _owb_users |
          selectattr('name', '==', __t_user) |
          selectattr('remove_unspecified_ssh_keys', 'defined') |
          map(attribute='remove_unspecified_ssh_keys') |
          first,
          omit
        )
      }}
  no_log: '{{ _owb_authorized_keys_no_log }}'
  become: true
  loop: >-
    {{
      _owb_users |
      selectattr('authorized_keys', 'defined') |
      map(attribute='name')
    }}
  loop_control:
    loop_var: '__t_user'
...
